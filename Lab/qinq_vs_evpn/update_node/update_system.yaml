---
- name: Updating system
  hosts:
    - all
  become: yes
  become_method: sudo
  tasks:
  - name: apt -y update
    apt:
      update_cache: true
      cache_valid_time: 3600
      force_apt_get: true
  - name: apt -y upgrade
    apt:
      update_cache: true
      upgrade: dist
      cache_valid_time: 3600
      force_apt_get: true
      state: latest
- name: install kvm and openvswitch
  hosts:
    - kvm1
  become: yes
  become_method: sudo
  tasks:
  - name: install kvm and openvswitch
    apt:
      name: "{{ item }}"
      update_cache: yes
    loop:
      - qemu-kvm 
      - libvirt-daemon-system 
      - virtinst 
      - libvirt-clients 
      - bridge-utils
      - openvswitch-switch
      - openvswitch-common
      - lldpd
  - name: create directory /vm
    ansible.builtin.file:
      path: /vm
      state: directory
      mode: '0777'
  - name: create vm1.sh
    copy:
      dest: /vm/vm1.sh
      content: |
        #!/bin/bash
        VM=vm1
        DISK=${VM}.img
        VLAN=101
        LAN=ovs0
        virt-install --name ${VM} \
          --disk ./${DISK},device=disk,bus=virtio \
          --ram 256 --vcpu 1 --osinfo alpinelinux3.18 \
          --network=bridge:${LAN},model=virtio,virtualport_type=openvswitch \
          --xml "./devices/interface/vlan/tag/@id=${VLAN}" \
          --xml "./devices/interface/target/@dev=${VM}_e0" \
          --console pty,target_type=serial \
          --noautoconsole \
          --hvm --accelerate \
          --vnc \
          --virt-type=kvm \
          --boot hd --noreboot --import
  - name: create directory /vm
    ansible.builtin.file:
      path: /vm/vm1.sh
      mode: '0777'
  - name: reboot node
    ansible.builtin.reboot:
      msg: "Rebooting machine in 5 seconds"